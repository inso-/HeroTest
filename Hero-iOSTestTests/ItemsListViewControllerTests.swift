////
////  ItemsListViewControllerTests.swift
////  Hero-iOSTest
////
////  Created by inso on 18/12/2018.
////  Copyright (c) 2018 Thomas Moussajee. All rights reserved.
////
////  This file was generated by the Clean Swift Xcode Templates so
////  you can apply clean architecture to your iOS and Mac projects,
////  see http://clean-swift.com
////
//
//@testable import Hero_iOSTest
//import XCTest
//import Domain
//
//
//class ItemsListViewControllerTests: XCTestCase
//{
//  // MARK: Subject under test
//
//  var sut: ItemsListViewController!
//  var window: UIWindow!
//
//  // MARK: Test lifecycle
//
//  override func setUp()
//  {
//    super.setUp()
//    window = UIWindow()
//    setupItemsListViewController()
//  }
//
//  override func tearDown()
//  {
//    window = nil
//    super.tearDown()
//  }
//
//  // MARK: Test setup
//
//  func setupItemsListViewController()
//  {
//    let bundle = Bundle.main
//    let storyboard = UIStoryboard(name: "Main", bundle: bundle)
//	sut = storyboard.instantiateViewController(withIdentifier: "ItemsListViewController") as? ItemsListViewController
//  }
//
//  func loadView()
//  {
//    window.addSubview(sut.view)
//	let request = ItemsList.GetItems.Request(page: 0)
//	sut.interactor?.doGetItems(request: request)
//    RunLoop.current.run(until: Date())
//  }
//
//  // MARK: Test doubles
//
//  class ItemsListBusinessLogicSpy: ItemsListBusinessLogic
//{
//	var doGetItemsCalled = false
//	func doGetItems(request: ItemsList.GetItems.Request) {
//		doGetItemsCalled = true
//	}
//
//	var doFilterItemsCalled = false
//	func filterItems(filter: @escaping (Item, Item) -> Bool) {
//		self.doFilterItemsCalled = true
//	}
//  }
//
//  // MARK: Tests
//
//  func testShouldDoGetItemsWhenViewIsLoaded()
//  {
//    // Given
//    let spy = ItemsListBusinessLogicSpy()
//    sut.interactor = spy
//
//    // When
//    loadView()
//
//    // Then
//    XCTAssertTrue(spy.doGetItemsCalled, "viewDidLoad() should ask the interactor to do something")
//  }
//
//  func testDisplayGetItems()
//  {
//    // Given
//	let viewModel = ItemsList.GetItems.ViewModel(items: [])
//
//    // When
//    loadView()
//    sut.displayItems(viewModel: viewModel)
//
//    // Then
//    //XCTAssertEqual(sut.nameTextField.text, "", "displaySomething(viewModel:) should update the name text field")
//  }
//}
